@use '../helpers' as *;



.bordered-grid {
    --columns: 1;
    --itemPaddingY: #{fluid(80, 40)};

    display: grid;
    grid-template-columns: repeat(var(--columns), 1fr);

    &--2-cols {
       --itemPaddingX: #{rem(80)};

       @include laptop {
       --itemPaddingX: #{rem(50)};
       }

       @include mobile-above {
       --columns: 2;

        .bordered-grid__item {
        &:nth-child(odd) {
            padding-right: var(--itemPaddingX);
            border-right: var(--border-bottom);
        }
        &:nth-child(even) {

            @include full-vw-centered-line(
                bottom,
                auto,
                100%,
                50%,
                );
            padding-left: var(--itemPaddingX);
        }
       }
    }

    @include mobile {
        .bordered-grid__item:not(:last-child) {
            border-bottom: var(--border-bottom);
        }
    }
 }

    &--3-cols {
        --columns: 3;
         --itemPaddingX: #{rem(50)};

         @include tablet {
            --columns: 1;

            .bordered-grid__item:not(:last-child) {
                border-bottom: var(--border-bottom);
            }
         }

         @include tablet-above {
             .bordered-grid__item {

            &:nth-child(3n - 2),
            &:nth-child(3n - 1) {

                padding-right: var(--itemPaddingX);
                border-right: var(--border-bottom);

            }

            &:nth-child(3n - 1) {
                @include full-vw-centered-line(bottom); 
            }

            &:nth-child(3n - 1),
            &:nth-child(3n) {
                
                padding-left: var(--itemPaddingX);

            }

         }
         }

         @include laptop {
         --itemPaddingX: #{rem(40)};
         }


         
    }

    &__item {
        padding-block: var(--itemPaddingY);
    }
}